## 自定义TypeHandler

### 全局指定（Mybatis配置文件）

    <typeHandlers>
        <typeHandler handler="cc.lzy.mybatis.dal.typehandlers.LevelTypeHandler"/>
    </typeHandlers>

    Mybatis会自动读取LevelTypeHandler实现中指定的泛型类型，LevelTypeHandler的泛型类型为LevelEnum，那么对于DO
    中的属性，其类型为LevelEnum时，便会自动匹配LevelTypeHandler

### Mapper中指定

#### 修改标签

  <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO Employee(emp_no,name,age,position,level,address,email,hire_date)
        VALUES (#{empNo}, #{name} , #{age}, #{position}, #{level, typeHandler=cc.lzy.mybatis.dal.typehandlers.LevelTypeHandler}, #{address}, #{email}, #{hireDate})
  </insert>

#### 查询标签
   没有#{}这种处理，可以在resultMap中指定

    <resultMap id="RM_EMPLOYEE" type="cc.lzy.mybatis.dal.entity.EmployeeDO">
           <id column="id" property="id"/>
           ...
           <result column="level" property="level" typeHandler="cc.lzy.mybatis.dal.typehandlers.LevelTypeHandler"/>
    </resultMap>


### 最佳实践

一般很少使用到自定义TypeHandler，一般能用到的就是处理时间的映射。
其他例如枚举的处理，我们一般都会将DO的属性类型和DB中一一对应，DO中还是保存字符串或者数字，DO->Model的时候，我们自行处理类型映射。